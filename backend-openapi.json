{
  "openapi": "3.0.3",
  "info": {
    "title": "Bal-Con Builders API",
    "version": "0.3.1",
    "description": "Construction management platform API (incremental exports, webhooks, analytics)."
  },
  "tags": [
    {
      "name": "Projects"
    },
    {
      "name": "Materials"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Analytics"
    },
    {
      "name": "Exports"
    },
    {
      "name": "Webhooks"
    }
  ],
  "paths": {
    "/api/projects": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List projects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/materials": {
      "post": {
        "tags": [
          "Materials"
        ],
        "summary": "Create material",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMaterial"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Material"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Materials"
        ],
        "summary": "List materials",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/work-orders": {
      "post": {
        "summary": "Create work order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List work orders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/quotes": {
      "post": {
        "summary": "Create quote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List quotes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "List orders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/inventory/transactions": {
      "get": {
        "summary": "List inventory transactions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Record inventory transaction (manual)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryTransaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/summary": {
      "get": {
        "summary": "Get latest KPI analytics summary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/trends": {
      "get": {
        "summary": "Get KPI trends over a time range",
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "30d",
                "90d",
                "365d"
              ],
              "default": "30d"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/distribution/materials": {
      "get": {
        "summary": "Get material distribution by field",
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "category",
                "status"
              ],
              "default": "category"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/trends.csv": {
      "get": {
        "summary": "Export KPI trends as CSV",
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "30d",
                "90d",
                "365d"
              ],
              "default": "30d"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "CSV",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/distribution/materials.csv": {
      "get": {
        "summary": "Export material distribution CSV",
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "category",
                "status"
              ],
              "default": "category"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "CSV",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/anomalies": {
      "get": {
        "summary": "Detect KPI anomalies (rolling z-score)",
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "30d",
                "90d"
              ],
              "default": "30d"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exports": {
      "post": {
        "summary": "Enqueue export job",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "materials_csv",
                      "orders_csv",
                      "projects_csv"
                    ]
                  },
                  "params": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "since": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "jsonl"
                        ],
                        "default": "csv"
                      },
                      "compression": {
                        "type": "string",
                        "enum": [
                          "none",
                          "gzip"
                        ],
                        "default": "none"
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exports/{id}": {
      "get": {
        "tags": [
          "Exports"
        ],
        "summary": "Get export job status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportJobStatus"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/exports/download/{key}": {
      "get": {
        "summary": "Download export file",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/exports/{id}/archive": {
      "get": {
        "tags": [
          "Exports"
        ],
        "summary": "Download consolidated zip archive of multi-part export",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ZIP archive",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Not completed or no parts"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/exports/token": {
      "post": {
        "summary": "Issue one-time download token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileKey": {
                    "type": "string"
                  },
                  "ttlSeconds": {
                    "type": "integer",
                    "minimum": 10,
                    "maximum": 3600
                  }
                },
                "required": [
                  "fileKey"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token issued",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/exports/token/{token}": {
      "get": {
        "summary": "Redeem one-time download token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "410": {
            "description": "Expired / Used"
          }
        }
      }
    },
    "/api/webhooks": {
      "get": {
        "summary": "List webhook subscriptions",
        "parameters": [
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "eventType": {
                        "type": "string"
                      },
                      "targetUrl": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "failureCount": {
                        "type": "integer"
                      },
                      "lastSuccessAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "lastFailureAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create webhook subscription",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eventType": {
                      "type": "string"
                    },
                    "targetUrl": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "eventType",
                    "targetUrl"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "eventType": {
                        "type": "string"
                      },
                      "targetUrl": {
                        "type": "string"
                      },
                      "secret": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      },
      "/api/webhooks/{id}": {
        "get": {
          "summary": "Get webhook subscription",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "eventType": {
                        "type": "string"
                      },
                      "targetUrl": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "failureCount": {
                        "type": "integer"
                      },
                      "lastSuccessAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "lastFailureAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "summary": "Update webhook subscription (activate/deactivate or target URL)",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean"
                    },
                    "targetUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "summary": "Delete webhook subscription",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Deleted"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/webhooks/{id}/rotate-secret": {
        "post": {
          "summary": "Rotate webhook subscription secret",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "secret": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/api/webhooks/deliveries": {
        "get": {
          "tags": [
            "Webhooks"
          ],
          "summary": "List webhook deliveries",
          "parameters": [
            {
              "name": "subscriptionId",
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "status",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "pending",
                  "delivered",
                  "failed"
                ]
              }
            },
            {
              "name": "eventType",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WebhookDelivery"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/webhooks/deliveries/{id}/retry": {
        "post": {
          "tags": [
            "Webhooks"
          ],
          "summary": "Retry failed webhook delivery",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Retry enqueued"
            },
            "400": {
              "description": "Cannot retry"
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "nullable": true
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer",
            "nullable": true
          },
          "assignedSalesRepId": {
            "type": "integer",
            "nullable": true
          },
          "inquiryNumber": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectType": {
            "type": "string",
            "enum": [
              "residential",
              "commercial",
              "industrial"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "inquiry",
              "quoted",
              "approved",
              "in_progress",
              "completed",
              "cancelled"
            ]
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent"
            ]
          },
          "estimatedBudget": {
            "type": "number",
            "nullable": true
          },
          "actualCost": {
            "type": "number",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "targetCompletionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualCompletionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "requirements": {},
          "materials": {},
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Material": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "currentStock": {
            "type": "number"
          },
          "minimumStock": {
            "type": "number"
          },
          "reorderPoint": {
            "type": "number"
          },
          "unitCost": {
            "type": "number"
          },
          "markupPercentage": {
            "type": "number"
          },
          "sellingPrice": {
            "type": "number"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "supplierContact": {
            "type": "string",
            "nullable": true
          },
          "supplierEmail": {
            "type": "string",
            "nullable": true
          },
          "leadTimeDays": {
            "type": "integer"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "discontinued"
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "projectId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "quoteId": {
            "type": "integer",
            "nullable": true
          },
          "orderNumber": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "in_production",
              "ready",
              "shipped",
              "delivered",
              "completed",
              "cancelled"
            ]
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent"
            ]
          },
          "subtotal": {
            "type": "number"
          },
          "taxAmount": {
            "type": "number"
          },
          "totalAmount": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "items": {},
          "shippingAddress": {
            "nullable": true
          },
          "billingAddress": {
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "estimatedDelivery": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualDelivery": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shippedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExportJobStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "partial",
              "completed",
              "failed"
            ]
          },
          "resultUrl": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "parts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "fileKey": {
                  "type": "string"
                },
                "rows": {
                  "type": "integer"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "WebhookDelivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "subscriptionId": {
            "type": "integer"
          },
          "eventType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "delivered",
              "failed"
            ]
          },
          "attemptCount": {
            "type": "integer"
          },
          "responseCode": {
            "type": "integer",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "nextRetryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "payload": {},
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateProject": {
        "type": "object",
        "required": [
          "title",
          "description",
          "projectType"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectType": {
            "type": "string",
            "enum": [
              "residential",
              "commercial",
              "industrial"
            ]
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent"
            ]
          },
          "userId": {
            "type": "integer"
          }
        }
      },
      "CreateMaterial": {
        "type": "object",
        "required": [
          "name",
          "category",
          "unitOfMeasure",
          "unitCost",
          "markupPercentage",
          "sellingPrice",
          "leadTimeDays",
          "status",
          "currentStock",
          "minimumStock",
          "reorderPoint"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "currentStock": {
            "type": "number"
          },
          "minimumStock": {
            "type": "number"
          },
          "reorderPoint": {
            "type": "number"
          },
          "unitCost": {
            "type": "number"
          },
          "markupPercentage": {
            "type": "number"
          },
          "sellingPrice": {
            "type": "number"
          },
          "supplierName": {
            "type": "string"
          },
          "supplierContact": {
            "type": "string"
          },
          "supplierEmail": {
            "type": "string"
          },
          "leadTimeDays": {
            "type": "integer"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "discontinued"
            ]
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "CreateOrder": {
        "type": "object",
        "required": [
          "projectId",
          "userId",
          "orderNumber",
          "subtotal",
          "taxAmount",
          "totalAmount",
          "amountPaid",
          "items"
        ],
        "properties": {
          "projectId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "quoteId": {
            "type": "integer"
          },
          "orderNumber": {
            "type": "string"
          },
          "subtotal": {
            "type": "number"
          },
          "taxAmount": {
            "type": "number"
          },
          "totalAmount": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "items": {},
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "urgent"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "in_production",
              "ready",
              "shipped",
              "delivered",
              "completed",
              "cancelled"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}